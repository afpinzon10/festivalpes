/*Creacion tablas*/

CREATE TABLE USUARIOS
(
  ID VARCHAR2(32) NOT NULL,
  NOMBRE VARCHAR2(32) NOT NULL,
  ROL VARCHAR2(32) NOT NULL CHECK(ROL IN ('ADMINISTRADOR', 'AEROPUERTO', 'AEROLINEA')),
  EMAIL VARCHAR2(32) NOT NULL,
  CONSTRAINT USUARIOS_PK PRIMARY KEY (ID)
);


CREATE TABLE AEROPUERTOS
(
  IATA VARCHAR2(3) NOT NULL,
  NOMBRE VARCHAR2(32) NOT NULL,
  TIPO VARCHAR2(13) NOT NULL CHECK(TIPO IN('INTERNACIONAL', 'NACIONAL', 'LOCAL')),
  CIUDAD VARCHAR2(32) NOT NULL,
  PAIS VARCHAR2(32) NOT NULL,
  CREADOR VARCHAR2(32) NOT NULL,
  CONSTRAINT AEROPUERTOS_PK PRIMARY KEY (IATA),
  CONSTRAINT AEROPUERTOS_CREADOR_FK FOREIGN KEY (CREADOR) REFERENCES USUARIOS(ID)
);



CREATE TABLE AEROLINEAS
(
  IATA VARCHAR2(2) NOT NULL,
  NOMBRE VARCHAR2(32) NOT NULL,
  PAIS VARCHAR2(32) NOT NULL,
  CREADOR VARCHAR2(32) NOT NULL,
  CONSTRAINT AEROLINEAS_PK PRIMARY KEY (IATA),
  CONSTRAINT AEROLINEAS_CREADOR_FK FOREIGN KEY (CREADOR) REFERENCES USUARIOS(ID)
);


CREATE TABLE CLIENTES
(
  TIPO_ID VARCHAR2(32) NOT NULL,
  ID NUMBER NOT NULL,
  NOMBRE VARCHAR2(32) NOT NULL,
  REMITENTE CHAR NOT NULL CHECK(REMITENTE IN (0,1)),
  VIAJERO CHAR NOT NULL CHECK(VIAJERO IN (0,1)),
  FRECUENTE CHAR NOT NULL CHECK (FRECUENTE IN (0,1)),
  CREADOR VARCHAR2(32) NOT NULL,
  CONSTRAINT CLIENTES_PK PRIMARY KEY (TIPO_ID, ID),
  CONSTRAINT CLIENTES_CK CHECK((VIAJERO=0 AND FRECUENTE=0) OR VIAJERO=1),
  CONSTRAINT CLIENTES_CREADOR_FK FOREIGN KEY (CREADOR) REFERENCES USUARIOS(ID)
);


CREATE TABLE AERONAVES
(
  MODELO VARCHAR2(32) NOT NULL,
  NUMERO_SERIE NUMBER NOT NULL,
  TIPO_AERONAVE VARCHAR2(32) NOT NULL,
  TIPO VARCHAR2(9) NOT NULL CHECK(TIPO IN ('CARGA','COMERCIAL')),
  MARCA VARCHAR2(32) NOT NULL,
  ANO_FABRICACION NUMBER(4,0) NOT NULL,
  CAPACIDAD NUMBER,
  SILLAS_ECONOMICAS NUMBER,
  SILLAS_EJECUTIVAS NUMBER,
  CREADOR VARCHAR2(32) NOT NULL,
  CONSTRAINT AVIONES_PK PRIMARY KEY (MODELO, NUMERO_SERIE),
  CONSTRAINT AVIONES_CK CHECK ((TIPO='CARGA' AND CAPACIDAD IS NOT NULL AND SILLAS_ECONOMICAS IS NULL AND SILLAS_EJECUTIVAS IS NULL) 
    OR (TIPO='COMERCIAL' AND CAPACIDAD IS NULL AND SILLAS_ECONOMICAS IS NOT NULL AND SILLAS_EJECUTIVAS IS NOT NULL)),
  CONSTRAINT AERONAVES_CREADOR_FK FOREIGN KEY (CREADOR) REFERENCES USUARIOS(ID)
);

CREATE TABLE ADMINISTRA
(
  ID_USUARIO VARCHAR2(32) NOT NULL,
  AEROLINEA VARCHAR2(2) NOT NULL,
  CONSTRAINT ADMINISTRA_PK PRIMARY KEY (ID_USUARIO, AEROLINEA),
  CONSTRAINT ADMINISTRA_FK1 FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID),
  CONSTRAINT ADMININISTRA_FK2 FOREIGN KEY (AEROLINEA) REFERENCES AEROLINEAS(IATA)
);


CREATE TABLE OPERA
(
  ID_USUARIO VARCHAR2(32) NOT NULL,
  AEROPUERTO VARCHAR2(3) NOT NULL,
  CONSTRAINT OPERA_PK PRIMARY KEY (ID_USUARIO, AEROPUERTO),
  CONSTRAINT OPERA_FK1 FOREIGN KEY (ID_USUARIO) REFERENCES USUARIOS(ID),
  CONSTRAINT OPERA_FK2 FOREIGN KEY (AEROPUERTO) REFERENCES AEROPUERTOS(IATA)
);

CREATE TABLE USA
(
  AEROLINEA VARCHAR2(2) NOT NULL,
  MODELO VARCHAR2(32) NOT NULL,
  NUMERO_SERIE NUMBER NOT NULL,
  CONSTRAINT USA_PK PRIMARY KEY (AEROLINEA, MODELO, NUMERO_SERIE),
  CONSTRAINT USA_AEROLINEA_FK FOREIGN KEY (AEROLINEA) REFERENCES AEROLINEAS(IATA),
  CONSTRAINT USA_AERONAVE_FK FOREIGN KEY (MODELO, NUMERO_SERIE) REFERENCES AERONAVES(MODELO, NUMERO_SERIE)
);

CREATE TABLE VUELOS
(
  IATA VARCHAR2(5) NOT NULL,
  ORIGEN VARCHAR2(3) NOT NULL,
  DESTINO VARCHAR2(3) NOT NULL,
  AEROLINEA VARCHAR2(2) NOT NULL,
  TIPO VARCHAR2(9) NOT NULL CHECK(TIPO IN('CARGA', 'COMERCIAL')),
  FRECUENCIA VARCHAR2(7) NOT NULL,
  HORA_LLEGADA VARCHAR2(5) NOT NULL,
  HORA_SALIDA VARCHAR2(5) NOT NULL,
  DISTANCIA NUMBER NOT NULL,
  DURACION VARCHAR(5) NOT NULL,
  COSTO_DENSIDAD NUMBER,
  COSTO_ECONOMICA NUMBER,
  COSTO_EJECUTIVA NUMBER,
  CREADOR VARCHAR2(32) NOT NULL,
  CONSTRAINT VUELOS_PK PRIMARY KEY (IATA),
  CONSTRAINT VUELOS_AEROLINEA_FK FOREIGN KEY (AEROLINEA) REFERENCES AEROLINEAS(IATA),
  CONSTRAINT VUELOS_ORIGEN_FK FOREIGN KEY (ORIGEN) REFERENCES AEROPUERTOS(IATA),
  CONSTRAINT VUELOS_DESTINO_FK FOREIGN KEY (DESTINO) REFERENCES AEROPUERTOS(IATA),
  CONSTRAINT VUELOS_CK CHECK((TIPO='CARGA' AND COSTO_DENSIDAD IS NOT NULL AND COSTO_ECONOMICA IS NULL AND COSTO_EJECUTIVA IS NULL)
    OR (TIPO='COMERCIAL' AND COSTO_DENSIDAD IS NULL AND COSTO_ECONOMICA IS NOT NULL AND COSTO_EJECUTIVA IS NOT NULL)),
  CONSTRAINT VUELOS_CREADOR_FK FOREIGN KEY (CREADOR) REFERENCES USUARIOS(ID)
);


CREATE TABLE VIAJES
(
  IATA VARCHAR2(5) NOT NULL,
  FECHA DATE NOT NULL,
  MODELO_AERONAVE VARCHAR2(32),
  NUMERO_SERIE_AERONAVE NUMBER,
  TIPO VARCHAR2(9) NOT NULL CHECK(TIPO IN ('CARGA', 'COMERCIAL')),
  CAPACIDAD_DISPONIBLE NUMBER,
  SILLAS_ECONOMICAS_DISPONIBLES NUMBER,
  SILLAS_EJECUTIVAS_DISPONIBLES NUMBER,
  FINALIZADO CHAR DEFAULT 0 NOT NULL CHECK (FINALIZADO IN (0,1)) ,
  CONSTRAINT VIAJES_PK PRIMARY KEY (IATA, FECHA),
  CONSTRAINT VIAJES_AERONAVE_FK FOREIGN KEY (MODELO_AERONAVE, NUMERO_SERIE_AERONAVE) REFERENCES AERONAVES(MODELO, NUMERO_SERIE),
  CONSTRAINT VIAJES_VUELO_FK FOREIGN KEY (IATA) REFERENCES VUELOS(IATA),
  CONSTRAINT VIAJES_CK CHECK ((TIPO='CARGA' AND CAPACIDAD_DISPONIBLE IS NOT NULL AND SILLAS_ECONOMICAS_DISPONIBLES IS NULL AND SILLAS_EJECUTIVAS_DISPONIBLES IS NULL) 
    OR (TIPO='COMERCIAL' AND CAPACIDAD_DISPONIBLE IS NULL AND SILLAS_ECONOMICAS_DISPONIBLES IS NOT NULL AND SILLAS_EJECUTIVAS_DISPONIBLES IS NOT NULL))
);

CREATE TABLE RESERVAS
(
  NUMERO_RESERVA NUMBER NOT NULL,
  TIPO_ID_CLIENTE VARCHAR2(32) NOT NULL,
  ID_CLIENTE NUMBER NOT NULL,
  IATA_VUELO VARCHAR2(5) NOT NULL,
  FECHA DATE NOT NULL,
  TIPO VARCHAR2(9) NOT NULL CHECK (TIPO IN('CARGA','COMERCIAL')),
  TIPO_SILLA VARCHAR(9),
  VOLUMEN NUMBER,
  PESO NUMBER,
  CONTENIDO NUMBER,
  CONSTRAINT RESERVAS_PK PRIMARY KEY (NUMERO_RESERVA),
  CONSTRAINT RESERVAS_CLIENTE_FK FOREIGN KEY (TIPO_ID_CLIENTE, ID_CLIENTE) REFERENCES CLIENTES(TIPO_ID, ID),
  CONSTRAINT RESERVAS_VIAJE_FK FOREIGN KEY (IATA_VUELO, FECHA) REFERENCES VIAJES(IATA, FECHA),
  CONSTRAINT RESERVAS_CK1 CHECK ((TIPO='CARGA' AND VOLUMEN IS NOT NULL AND PESO IS NOT NULL AND CONTENIDO IS NOT NULL)
    OR (TIPO='COMERCIAL' AND VOLUMEN IS NULL AND PESO IS NULL AND CONTENIDO IS NULL)),
  CONSTRAINT RESERVAS_CK2 CHECK((TIPO='COMERCIAL' AND TIPO_SILLA is not null and TIPO_SILLA IN ('ECONOMICA','EJECUTIVA'))
    OR (TIPO='CARGA' and TIPO_SILLA is null))
);


/*Triggers*/


/*Generar numero de reserva */
CREATE SEQUENCE ISIS2304B261620.num_reserva
START WITH 1
INCREMENT BY 1;

create or replace trigger generar_num_reserva
before insert on RESERVAS
for each row
begin
  :new.numero_reserva := num_reserva.nextVal;
end;
/

/*Actualizar informacion de viaje*/
CREATE OR REPLACE TRIGGER actualizar_info_viaje
  BEFORE INSERT ON RESERVAS
BEGIN
  IF :new.TIPO = 'COMERCIAL' AND :new.TIPO_SILLA='ECONOMICA' THEN
    UPDATE VIAJES SET SILLAS_ECONOMICAS_DISPONIBLES = SILLAS_ECONOMICAS_DISPONIBLES-1
    WHERE IATA = :new.IATA_VUELO AND FECHA = :new.FECHA;
  ELSIF :new.TIPO = 'COMERCIAL' AND :new.TIPO_SILLA='EJECUTIVA' THEN
    UPDATE VIAJES SET SILLAS_EJECUTIVAS_DISPONIBLES = SILLAS_EJECUTIVAS_DISPONIBLES-1
    WHERE IATA = :new.IATA_VUELO AND FECHA = :new.FECHA;
  ELSIF :new.TIPO = 'CARGA' THEN
    UPDATE VIAJES SET CAPACIDAD_DISPONIBLE = CAPACIDAD_DISPONIBLE-:new.PESO
    WHERE IATA = :new.IATA_VUELO AND FECHA = :new.FECHA;
  END IF;
END;



